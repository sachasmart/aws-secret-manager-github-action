name: 'AWS Secret Manager Github Action'
description: 'Decrypts a secret from AWS Secret Manager and outputs it to the Github Action environment'
branding:
  icon: 'shield'
  color: 'blue'
inputs:
  envVariableName: 
    description: 'Name of the variable to be accessed in the Github Action environment'
    required: true
  secretId: 
    description: 'ID of the secret in AWS Secret Manager'
    required: true
  aws-access-key-id:
    required: true
    description: "The aws-access-key-id used to authenticate with AWS"
  aws-secret-access-key:
    required: true
    description: "The aws-secret-access-key used to authenticate with AWS"
  aws-region:
      required: true
      description: "The aws-region used to authenticate with AWS"
outputs:
  output_secret_to_runner_environment:
    description: 'The secret decrypted from AWS Secret Manager'
    value: ${{ steps.output_secret_to_runner_environment.outputs.secret }}
runs:
  using: 'composite'
  steps:
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}
    - id: output_secret_to_runner_environment
      run: echo ${{inputs.envVariableName}}=$(aws secretsmanager get-secret-value --secret-id ${{inputs.secretId}} --region ${{inputs.aws-region}} --query SecretString --output text) >> $GITHUB_ENV
      shell: bash
    - id: check_if_secret_is_in_environment
      run: if [ -z ${${{inputs.envVariableName}}+x} ]; then echo "${{inputs.envVariableName}} is unset"; else echo "${{inputs.envVariableName}} is set to '${{inputs.envVariableName}}'"; fi
      shell: bash

# 